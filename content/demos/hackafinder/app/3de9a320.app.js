"use strict";angular.module("hackaFinderApp",["ngMessages","ngRoute","ui.bootstrap"]).config(["$routeProvider","$locationProvider",function($routeProvider,$locationProvider){$routeProvider.otherwise({redirectTo:"/"}),$locationProvider.html5Mode(!0)}]).constant("DEMO",!0).run(["$rootScope","$location","$log","Authenticate","DEMO",function($rootScope,$location,$log,Authenticate,DEMO){$rootScope.$on("$routeChangeStart",function(event,next){Authenticate.isProtected(next.$$route.originalPath)&&(DEMO||Authenticate.isAuthenticated()||($log.warn("Bzz! Does not compute! Please log in first."),event.preventDefault(),$location.path("/")))})}]),angular.module("hackaFinderApp").controller("EventsCtrl",["$scope","$log","$location","API","Authenticate","Validate","DEMO",function($scope,$log,$location,API,Authenticate,Validate,DEMO){$scope.evt={},$scope.evt.event={info:{content:{},location:{}},activity:{}},DEMO&&API.put("/api/auth/events",{},function(err,res){err?$log.error(err):res.status>=400?$log.error("Error: %d - %s",res.status,res.data):(res.data.info.content.date=new Date(1111,10,11),$scope.evt.event=res.data)}),$scope.evt.valid=Validate.getRegex(),$scope.evt.checkEventName=function(eventName){var input=$scope.eventForm.eventName;API.get("/api/auth/events",eventName,function(err,res){err?$log.error(err):res.status>=400&&$log.error("Error: %d - %s",res.status,res.data);var isValid=angular.isObject(res)&&(angular.isObject(res.data)&&angular.isObject(res.data.info)&&angular.isString(res.data.info.content.name)&&res.data.info.content.name.length>0||res.data===!1);input.$setValidity("eventNameTaken",isValid)})},$scope.evt.submit=function(){var putData={user:Authenticate.getUser(),event:$scope.evt.event};API.put("/api/auth/events",putData,function(err,res){err?$log.error(err):res.status>=400?$log.error("Error: %d - %s",res.status,res.data):$location.path("/")})}}]),angular.module("hackaFinderApp").config(["$routeProvider",function($routeProvider){$routeProvider.when("/events",{templateUrl:"app/events/events.html",controller:"EventsCtrl"})}]),angular.module("hackaFinderApp").controller("LoginCtrl",["$scope","$modalInstance","$log","API","Authenticate","DEMO",function($scope,$modalInstance,$log,API,Authenticate,DEMO){$scope.login={},$scope.login.user={info:{account:{username:"",password:""}}},DEMO&&API.post("/api/users",{},function(err,res){err?$log.error(err):res.status>=400?$log.error("Error: %d - %s",res.status,res.data):$scope.login.user=res.data}),$scope.login.buttonLabel="Go!",$scope.login.didFail=!1,$scope.login.submitLogin=function(){$scope.login.didFail=!1,API.post("/api/users",{user:$scope.login.user},function(err,res){err?$log.error(err):res.status>=400?($log.error("Error: %d - %s",res.status,res.data),$scope.login.didFail=!0):(Authenticate.setUser(res.data),$modalInstance.close(res.data))})}}]),angular.module("hackaFinderApp").controller("MainCtrl",[function(){}]),angular.module("hackaFinderApp").config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"app/main/main.html",controller:"MainCtrl"})}]),angular.module("hackaFinderApp").controller("SearchCtrl",["$scope","$log","API","Authenticate","ManageUpdates","DEMO",function($scope,$log,API,Authenticate,ManageUpdates,DEMO){function populateModel(path,model,id,next,_test){if(!path||!angular.isString(path)||!model||"users"!==model&&"events"!==model)throw new Error('Invalid arguments: <path> should be a string, <model> should equal "users" or "events".');next=angular.isFunction(next)?next:angular.noop,API.post(path,id,null,function(err,res){return err?($log.error(err),next()):res.status>=400?($log.error("Error: %d - %s",res.status,res.data),next()):($scope.sch[model]=angular.isArray(res.data.info)?res.data.info:res.data,"users"!==model||_test||_purgeAuthUser(),void next())})}function _purgeAuthUser(){for(var users=$scope.sch.users,i=0,len=users.length;len>i;i++)if(angular.equals(users[i].info._id,$scope.sch.user.info._id))return users.splice(i,1)}function searchEvents(keyword,_test){if(angular.isUndefined(keyword)||""===keyword)return null;var events=$scope.sch.events;keyword=angular.isString(keyword)?keyword.toLowerCase():keyword;for(var i=0,len=events.length;len>i;i++){var wasFound=_test&&angular.isFunction(_test._findMatch)?_test._findMatch(events[i],keyword):_findMatch(events[i],keyword);if(wasFound)return events[i]}return null}function searchAllUsers(keyword,onlyFirst,_test){if(angular.isUndefined(keyword)||""===keyword)return onlyFirst?null:[];var users=$scope.sch.users,user={account:{},location:{},skills:{}},matches=[];keyword=angular.isString(keyword)?keyword.toLowerCase():keyword;for(var i=0,len=users.length;len>i;i++){user.account.username=users[i].info.account.username,user.account.first_name=users[i].info.account.first_name,user.account.last_name=users[i].info.account.last_name,user.location=users[i].info.location,user.skills=users[i].activity.skills;var wasFound=_test&&angular.isFunction(_test._findMatch)?_test._findMatch(user,keyword):_findMatch(user,keyword),shouldMatch=_test&&angular.isFunction(_test._shouldMatch)?_test._shouldMatch(users[i]):_shouldMatch(users[i]);if(wasFound&&onlyFirst)return users[i];wasFound&&shouldMatch&&matches.push(users[i])}return onlyFirst?null:matches}function _findMatch(obj,keyword){var wasFound=!1;for(var prop in obj){if(wasFound)return wasFound;angular.isObject(obj[prop])?wasFound=_findMatch(obj[prop],keyword):(obj[prop]==keyword||angular.isString(obj[prop])&&obj[prop].toLowerCase().indexOf(keyword)>-1)&&(wasFound=!0)}return wasFound}function _shouldMatch(match){return $scope.sch.usersMap[match.info._id]&&$scope.sch.usersMap[match.info._id].showInSearch===!1?!1:!0}function mapRoster(){if(angular.isUndefined($scope.sch.user.activity)||angular.isUndefined($scope.sch.user.activity.events)||angular.isUndefined($scope.sch.event.info)||angular.isUndefined($scope.sch.event.info._id))return{};for(var uEvents=$scope.sch.user.activity.events,uEvent={},i=0,len=uEvents.length;len>i;i++)if(angular.equals(uEvents[i].event_id,$scope.sch.event.info._id)){uEvent=uEvents[i];break}var uid,rosterMap={},tLen=uEvent.team.length,pLen=uEvent.pending.length,iLen=uEvent.invited.length;for(i=0;tLen>i;i++)uid=uEvent.team[i],rosterMap[uid]={team:{exists:!0},pending:{exists:!1},invited:{exists:!1}};for(i=0;pLen>i;i++)uid=uEvent.pending[i],rosterMap[uid]={team:{exists:!1},pending:{exists:!0},invited:{exists:!1}};for(i=0;iLen>i;i++)uid=uEvent.invited[i],rosterMap[uid].invited={exists:!0};return rosterMap}function assembleRoster(map,_test){if(!map||!angular.isObject(map))return map;var $searchAllUsers=_test&&angular.isFunction(_test.searchAllUsers)?_test.searchAllUsers:searchAllUsers,$_getIndex=_test&&angular.isFunction(_test._getIndex)?_test._getIndex:_getIndex,roster=[];for(var id in map){if(angular.isUndefined(map[id].eUser)){var eUsers=$scope.sch.event.activity.users,eUserIndex=$_getIndex(eUsers,id);map[id].eUser=eUsers[eUserIndex]||{}}var username=map[id].eUser.username,match=username?$searchAllUsers(username,!0):null;angular.isObject(match)&&roster.push(match)}return $scope.sch.rosterArray=roster,map}function mapEventUsers(map){if(angular.isUndefined($scope.sch.event.activity)||angular.isUndefined($scope.sch.event.activity.users)||!map||!angular.isObject(map))return map;for(var eUsers=$scope.sch.event.activity.users,eUser={},i=0,len=eUsers.length;len>i;i++)eUser=eUsers[i],angular.isUndefined(map[eUser.user_id])?map[eUser.user_id]={team:{exists:!1},pending:{exists:!1},invited:{exists:!1},eUser:eUser,showInSearch:eUser.match}:(map[eUser.user_id].eUser=eUser,map[eUser.user_id].showInSearch=!1);return map}function _getIndex(arr,id){if(!arr||!angular.isArray(arr)||!id)throw new Error("Invalid arguments.");for(var i=0,len=arr.length;len>i;i++){var val=arr[i].event_id||arr[i].user_id||arr[i];if(angular.equals(id,val)||id==val)return i}return-1}function _initEventChoice(user,next,_test){if(next=angular.isFunction(next)?next:angular.noop,_test=_test||{},!angular.isObject(user)||!angular.isObject(user.info)||!angular.isDefined(user.info._id)||!angular.isObject(user.activity)||!angular.isArray(user.activity.events)||user.activity.events.length<=0||!angular.isObject(user.activity.events[0]))return _test.val="args",next(_test.val);var $DEMO=_test&&angular.isDefined(_test.DEMO)?_test.DEMO:DEMO,$_getIndex=_test&&angular.isFunction(_test._getIndex)?_test._getIndex:_getIndex,$searchEvents=_test&&angular.isFunction(_test.searchEvents)?_test.searchEvents:searchEvents,$getSetBias=_test&&angular.isFunction(_test.getSetBias)?_test.getSetBias:$scope.sch.getSetBias,$getSetMatch=_test&&angular.isFunction(_test.getSetMatch)?_test.getSetMatch:$scope.sch.getSetMatch,$mapRoster=_test&&angular.isFunction(_test.mapRoster)?_test.mapRoster:mapRoster,$assembleRoster=_test&&angular.isFunction(_test.assembleRoster)?_test.assembleRoster:assembleRoster,$mapEventUsers=_test&&angular.isFunction(_test.mapEventUsers)?_test.mapEventUsers:mapEventUsers,$populateModel=_test&&angular.isFunction(_test.populateModel)?_test.populateModel:populateModel,user_id=user.info._id,event_id=user.activity.events[0].event_id,eventInfo=$searchEvents(event_id);return angular.isObject(eventInfo)&&angular.isObject(eventInfo.content)&&angular.isString(eventInfo.content.name)?void API.get("/api/auth/events",eventInfo.content.name,function(err,res){return err?($log.error(err),next()):res.status>=400?($log.error("Error: %d - %s",res.status,res.data),next()):void $populateModel("/api/auth/users/event","users",event_id,function(){$DEMO&&res.data.activity.users.push({user_id:user_id,username:$scope.sch.user.info.account.username,bias:"flexible",match:!0});var event=$scope.sch.event=res.data,eUserIndex=$_getIndex(event.activity.users,user_id),bias=event.activity.users[eUserIndex].bias,match=event.activity.users[eUserIndex].match;$scope.sch.usersMap=$mapEventUsers($assembleRoster($mapRoster())),$scope.sch.eventWasChosen=!0,$getSetBias(bias),$getSetMatch(match)})}):($log.error("The event object is invalid."),_test.val="event",next(_test.val))}$scope.sch={},$scope.$watch(function(){return $scope.sch.userChanged},function(newValue){newValue===!0&&($scope.sch.userChanged=!1,ManageUpdates.updateUserProfile($scope.sch.user,Authenticate.getUser()))}),$scope.$watch(function(){return $scope.sch.eventChanged},function(newValue){newValue===!0&&($scope.sch.eventChanged=!1,ManageUpdates.updateEventActivity($scope.sch.event.activity))}),$scope.sch.eventSearch="",$scope.sch.eventWasChosen=!1,$scope.sch.userIsVisible=!1,$scope.sch.labelHide="",$scope.sch.labelBias="",$scope.sch.userSearch="",$scope.sch.users=[],$scope.sch.user={},$scope.sch.usersMap={},$scope.sch.rosterArray=[],$scope.sch.userMatches=[],$scope.sch.events=[],$scope.sch.event={},$scope.sch.isDemo=!1,$scope.sch.userChanged=!1,$scope.sch.eventChanged=!1,$scope.sch.displayEventMatch=function(keyword,_test){var result=_test&&_test.searchEvents?_test.searchEvents(keyword):searchEvents(keyword);$scope.sch.event.info=angular.isObject(result)?result:{}},$scope.sch.chooseEvent=function(_test){if(!angular.isUndefined($scope.sch.event.info._id)&&!angular.isUndefined($scope.sch.user.info._id)){var $getSetMatch=_test&&angular.isFunction(_test.getSetMatch)?_test.getSetMatch:$scope.sch.getSetMatch,$mapRoster=_test&&angular.isFunction(_test.mapRoster)?_test.mapRoster:mapRoster,$assembleRoster=_test&&angular.isFunction(_test.assembleRoster)?_test.assembleRoster:assembleRoster,$mapEventUsers=_test&&angular.isFunction(_test.mapEventUsers)?_test.mapEventUsers:mapEventUsers,$populateModel=_test&&angular.isFunction(_test.populateModel)?_test.populateModel:populateModel,eventName=$scope.sch.event.info.content.name,event_id=$scope.sch.event.info._id,user_id=$scope.sch.user.info._id,userActivity=$scope.sch.user.activity,newUserEvent={event_id:event_id,team:[],pending:[],invited:[]},newEventUser={user_id:user_id,username:$scope.sch.user.info.account.username,bias:"flexible",match:!0};angular.isUndefined(userActivity.events)?userActivity.events=[newUserEvent]:userActivity.events.push(newUserEvent),$scope.sch.userChanged=!0,API.get("/api/auth/events",eventName,function(err,res){if(err)return void $log.error(err);if(res.status>=400)return void $log.error("Error: %d - %s",res.status,res.data);var event=res.data;angular.isUndefined(event.activity.users)?event.activity.users=[newEventUser]:event.activity.users.push(newEventUser),angular.isUndefined(event.activity.attending)?event.activity.attending=1:event.activity.attending++,$scope.sch.event=event,$scope.sch.eventChanged=!0,$populateModel("/api/auth/users/event","users",event_id,function(){$scope.sch.usersMap=$mapEventUsers($assembleRoster($mapRoster())),$scope.sch.eventWasChosen=!0,$scope.sch.eventSearch="",$getSetMatch(!0)})})}},$scope.sch.removeEvent=function(){if(!angular.isUndefined($scope.sch.event.info._id)&&!angular.isUndefined($scope.sch.user.info._id)){var event_id=$scope.sch.event.info._id,uEventIndex=_getIndex($scope.sch.user.activity.events,event_id),user_id=$scope.sch.user.info._id,eUserIndex=_getIndex($scope.sch.event.activity.users,user_id),roster=$scope.sch.user.activity.events.splice(uEventIndex,1)[0];$scope.sch.event.activity.attending--,$scope.sch.event.activity.users.splice(eUserIndex,1),$scope.sch.userChanged=!0,$scope.sch.eventChanged=!0,$scope.sch.users=[],$scope.sch.usersMap={},$scope.sch.rosterArray=[],$scope.sch.eventWasChosen=!1,ManageUpdates.removeFromRoster(user_id,roster,!0)}},$scope.sch.getSetBias=function(newBias){var id=$scope.sch.user.info._id,map=$scope.sch.usersMap;if(!map||angular.isUndefined(map[id]))return void $log.error("The event users should first be mapped.");if(angular.isUndefined(newBias)||!angular.isString(newBias)||!newBias.match(/^(flexible|competitive|social)$/i))return map[id].eUser.bias;var lower=newBias.toLowerCase();return $scope.sch.labelBias=lower[0].toUpperCase()+lower.substring(1),map[id].eUser.bias=lower,$scope.sch.eventChanged=!0,lower},$scope.sch.getSetMatch=function(newStatus){var id=$scope.sch.user.info._id,map=$scope.sch.usersMap;return!map||angular.isUndefined(map[id])?void $log.error("The event users should first be mapped."):angular.isUndefined(newStatus)||newStatus!==!0&&newStatus!==!1?map[id].eUser.match:($scope.sch.userIsVisible=newStatus,$scope.sch.labelHide=newStatus?"Hide me from search!":"Show me in search!",map[id].eUser.match=newStatus,$scope.sch.eventChanged=!0,newStatus)},$scope.sch.removeTeamMember=function(t,rosterArrayIndex,_test){if(!(angular.isObject(t)&&angular.isObject(t.info)&&angular.isDefined(t.info._id)&&angular.isNumber(rosterArrayIndex)&&angular.isObject($scope.sch.user.activity)&&angular.isArray($scope.sch.user.activity.events)&&angular.isDefined($scope.sch.usersMap[t.info._id])))return void $log.error("Cannot remove this user as the map or argument is invalid.");var $_getIndex=_test&&angular.isFunction(_test._getIndex)?_test._getIndex:_getIndex,map=$scope.sch.usersMap,user_id=$scope.sch.user.info._id,event_id=$scope.sch.event.info._id,index=$_getIndex($scope.sch.user.activity.events,event_id),uEvent=$scope.sch.user.activity.events[index],roster={event_id:event_id,team:[],pending:[],invited:[]},wasRemovedFromTeam=!1;map[t.info._id].team.exists&&(uEvent.team.splice($_getIndex(uEvent.team,t.info._id),1),wasRemovedFromTeam=!0,roster.team=uEvent.team),map[t.info._id].pending.exists&&uEvent.pending.splice($_getIndex(uEvent.pending,t.info._id),1),map[t.info._id].invited.exists&&uEvent.invited.splice($_getIndex(uEvent.invited,t.info._id),1),map[t.info._id].team.exists=!1,map[t.info._id].pending.exists=!1,map[t.info._id].invited.exists=!1,map[t.info._id].showInSearch=map[t.info._id].eUser.match;var tRoster=$scope.sch.rosterArray.splice(rosterArrayIndex,1)[0];return map[t.info._id].showInSearch&&$scope.sch.userMatches.unshift(tRoster),$scope.sch.userChanged=!0,wasRemovedFromTeam&&roster.team.length>0?ManageUpdates.removeFromRoster(t.info._id,roster,!0):(roster.pending=[t.info._id],void ManageUpdates.removeFromRoster(user_id,roster))},$scope.sch.confirmTeamMember=function(t,_test){if(!angular.isObject(t)||!angular.isObject(t.info)||!angular.isDefined(t.info._id)||!angular.isObject($scope.sch.user.activity)||!angular.isArray($scope.sch.user.activity.events)||!angular.isDefined($scope.sch.usersMap[t.info._id])||$scope.sch.usersMap[t.info._id].invited.exists)return void $log.error("Cannot confirm user as the map or argument is invalid.");var $_getIndex=_test&&angular.isFunction(_test._getIndex)?_test._getIndex:_getIndex,$searchAllUsers=_test&&angular.isFunction(_test.searchAllUsers)?_test.searchAllUsers:searchAllUsers,$mapRoster=_test&&angular.isFunction(_test.mapRoster)?_test.mapRoster:mapRoster,$assembleRoster=_test&&angular.isFunction(_test.assembleRoster)?_test.assembleRoster:assembleRoster,$mapEventUsers=_test&&angular.isFunction(_test.mapEventUsers)?_test.mapEventUsers:mapEventUsers,$DEMO=_test&&angular.isDefined(_test.DEMO)?_test.DEMO:DEMO,map=$scope.sch.usersMap,event_id=$scope.sch.event.info._id,index=$_getIndex($scope.sch.user.activity.events,event_id),uEvent=$scope.sch.user.activity.events[index];if($DEMO){map[t.info._id].team.exists=!0,map[t.info._id].pending.exists=!1,map[t.info._id].invited.exists=!1;var pendingIndex=$_getIndex(uEvent.pending,t.info._id),otherUserId=uEvent.pending.splice(pendingIndex,1)[0];return uEvent.team.push(otherUserId),$scope.sch.userChanged=!0,map[t.info._id].showInSearch=!1,$scope.sch.userMatches=$searchAllUsers($scope.sch.userSearch),$scope.sch.userMatches}var roster={event_id:event_id,team:uEvent.team,pending:uEvent.pending};ManageUpdates.updateTeamAsConfirmed(t.info._id,roster,function(err,res){err||($scope.sch.user=res.data,$scope.sch.usersMap=$mapEventUsers($assembleRoster($mapRoster())),$scope.sch.userMatches=$searchAllUsers($scope.sch.userSearch))})},$scope.sch.displayUserMatches=function(keyword,_test){if(angular.isUndefined(keyword)||angular.isString(keyword)&&keyword.length<=0)return $scope.sch.userMatches=$scope.sch.users,$scope.sch.userMatches;var $searchAllUsers=_test&&angular.isFunction(_test.searchAllUsers)?_test.searchAllUsers:searchAllUsers,results=$searchAllUsers(keyword);$scope.sch.userMatches=angular.isArray(results)&&results.length>0?results:[]},$scope.sch.addUserToPending=function(u,matchIndex,_test){if(!angular.isObject(u)||!angular.isObject(u.info)||!angular.isDefined(u.info._id)||!angular.isNumber(matchIndex)||!angular.isObject($scope.sch.user.activity)||!angular.isArray($scope.sch.user.activity.events)||!angular.isDefined($scope.sch.usersMap[u.info._id])||$scope.sch.usersMap[u.info._id].team.exists||$scope.sch.usersMap[u.info._id].pending.exists||$scope.sch.usersMap[u.info._id].invited.exists)return void $log.error("Cannot add user as the map or arguments are invalid.");var $_getIndex=_test&&angular.isFunction(_test._getIndex)?_test._getIndex:_getIndex,map=$scope.sch.usersMap,event_id=$scope.sch.event.info._id,index=$_getIndex($scope.sch.user.activity.events,event_id),uEvent=$scope.sch.user.activity.events[index];uEvent.pending.push(u.info._id),uEvent.invited.push(u.info._id),map[u.info._id].team.exists=!1,map[u.info._id].pending.exists=!0,map[u.info._id].invited.exists=!0,$scope.sch.userChanged=!0,map[u.info._id].showInSearch=!1;var userMatch=$scope.sch.userMatches.splice(matchIndex,1)[0];$scope.sch.rosterArray.push(userMatch);var roster={event_id:event_id,team:[],pending:[u.info._id]};ManageUpdates.addUserToPending($scope.sch.user.info._id,roster)},$scope.sch._print=function(){$log.debug("/// PRINT INFO ///"),$log.debug("$scope.sch.user.activity.events:"),$log.debug($scope.sch.user.activity.events),$log.debug("$scope.sch.events:"),$log.debug($scope.sch.events),$log.debug("$scope.sch.event:"),$log.debug($scope.sch.event)},function(){$scope.sch.eventWasChosen=!1,$scope.sch.userIsVisible=!0,$scope.sch.labelHide="Hide me from search!",$scope.sch.labelBias="My Event Bias",$scope.sch.user=Authenticate.getUser(),$scope.sch.userMatches=$scope.sch.users,$scope.sch.event={info:{content:{}},activity:{users:[]}},$scope.sch.isDemo=DEMO,$scope.sch.userChanged=!1,$scope.sch.eventChanged=!1,populateModel("/api/auth/events/all","events",null,function(){_initEventChoice($scope.sch.user)})}(),$scope.sch._test={_initEventChoice:_initEventChoice,populateModel:populateModel,_purgeAuthUser:_purgeAuthUser,searchEvents:searchEvents,searchAllUsers:searchAllUsers,_findMatch:_findMatch,_shouldMatch:_shouldMatch,mapRoster:mapRoster,assembleRoster:assembleRoster,mapEventUsers:mapEventUsers,_getIndex:_getIndex}}]),angular.module("hackaFinderApp").config(["$routeProvider",function($routeProvider){$routeProvider.when("/search",{templateUrl:"app/search/search.html",controller:"SearchCtrl"})}]),angular.module("hackaFinderApp").controller("SettingsCtrl",["$scope","$log","API","Authenticate","Validate","ManageUpdates",function($scope,$log,API,Authenticate,Validate,ManageUpdates){$scope.stg={},$scope.$watch(function(scope){return scope.stg.user},ManageUpdates.updateUserProfile,!0),$scope.stg.user=Authenticate.getUser(),$scope.stg.valid=Validate.getRegex(),$scope.stg.modelOptions={debounce:{"default":1e3,blur:0}},$scope.stg.newSkill={skill:"",rating:0},$scope.stg.r={max:3,ratingStates:[{stateOn:"glyphicon-star",stateOff:"glyphicon-star-empty"},{stateOn:"glyphicon-star",stateOff:"glyphicon-star-empty"},{stateOn:"glyphicon-star",stateOff:"glyphicon-star-empty"}]};var SKILL_LIMIT=5;$scope.stg.addSkill=function(event){var skills=$scope.stg.user.activity.skills;angular.isUndefined($scope.stg.newSkill.skill)||!angular.isObject(event)||13!==event.keyCode||skills.length>=SKILL_LIMIT||(skills.push(angular.copy($scope.stg.newSkill)),$scope.stg.newSkill.skill="")},$scope.stg.getMax=function(){return SKILL_LIMIT},$scope.stg.removeSkill=function(s){if(!angular.isUndefined(s)&&angular.isObject(s)&&!angular.isUndefined(s.skill))for(var skills=$scope.stg.user.activity.skills,len=skills.length,i=0;len>i;i++)if(skills[i].skill===s.skill){skills.splice(i,1);break}}}]),angular.module("hackaFinderApp").config(["$routeProvider",function($routeProvider){$routeProvider.when("/settings",{templateUrl:"app/settings/settings.html",controller:"SettingsCtrl"})}]),angular.module("hackaFinderApp").controller("SignupCtrl",["$scope","$location","$log","API","Authenticate","Validate","DEMO",function($scope,$location,$log,API,Authenticate,Validate,DEMO){$scope.signup={},$scope.signup.user={info:{account:{}},activity:{}},DEMO&&API.put("/api/users",{},function(err,res){err?$log.error(err):res.status>=400?$log.error("Error: %d - %s",res.status,res.data):$scope.signup.user=res.data}),$scope.signup.valid=Validate.getRegex(),$scope.signup.checkUsername=function(username){var input=$scope.signupForm.username;API.get("/api/users",username,function(err,res){err?$log.error(err):res.status>=400&&$log.error("Error: %d - %s",res.status,res.data);var isValid=angular.isObject(res)&&res.data===!1;input.$setValidity("usernameTaken",isValid)})},$scope.signup.submit=function(){API.put("/api/users",{user:$scope.signup.user},function(err,res){err?$log.error(err):res.status>=400||!angular.isObject(res.data)||!angular.isObject(res.data.info)||!angular.isObject(res.data.activity)?($log.error("Error (%d): Could not complete signup.",res.status),$log.error(res.data)):(Authenticate.setUser(res.data),$location.path("/"))})}}]),angular.module("hackaFinderApp").config(["$routeProvider",function($routeProvider){$routeProvider.when("/signup",{templateUrl:"app/signup/signup.html",controller:"SignupCtrl"})}]),angular.module("hackaFinderApp").factory("API",["$http","$log","Validate","Authenticate","DEMO",function($http,$log,Validate,Authenticate,DEMO){function prepareRequest(req,next){var route,op=req.op,path=req.path,id=req.id,auth=req.auth;if(!angular.isFunction(next))throw new Error(msg.callback);if(!(angular.isString(path)&&apiPaths[path]&&apiPaths[path][op]))throw new Error(msg.path);if(route=DEMO?apiPaths[path][op]:path,!DEMO&&angular.isString(id)&&(route+="/"+id),req.route=route,!angular.isObject(auth)&&route.indexOf("auth")>-1&&-1===route.indexOf("menu")){var err=new Error(msg.restricted);return err.dbi={status:401,msg:msg.restricted},next(err,null)}angular.isFunction(req.makeCall)?req.makeCall(req,next):makeCall(req,next)}function makeCall(req,next){var op=req.op,route=req.route,data=req.data,test=req._test||angular.noop;if(!angular.isDefined($http[op])||!angular.isFunction($http[op]))throw new Error(msg.op);DEMO?$http.get(json).then(function(res){test(),next(null,{status:res.status,data:res.data[route]})},function(err){test(),next(err,null)}):$http[op].apply(null,[route,data]).then(function(res){test(),next(null,res)},function(err){test(),next(err,null)})}var json="/components/api/api.service.demo.json",msg=Validate.getErrorMessages(),apiPaths={"/api/users":{get:"usersGet",post:"usersPost",put:"usersPost"},"/api/auth/users":{post:"usersPost"},"/api/auth/users/event":{post:"usersAuthEventGet"},"/api/auth/events":{get:"eventsAuthPost",post:"eventsAuthPost",put:"eventsAuthPost"},"/api/auth/events/all":{post:"eventsAuthAllGet"},"/api/auth/teams/remove":{post:"teamsAuthRemovePost"},"/api/auth/teams/confirm":{post:"teamsAuthConfirmPost"},"/api/auth/teams/pending":{post:"teamsAuthPendingPost"},"/api/auth/menu":{get:"menuAuthGet"}};return{_test:{prepareRequest:prepareRequest,makeCall:makeCall},get:function(path,id,next){angular.isFunction(id)&&(next=id,id=null);var req={op:"get",path:path,id:id,data:null,auth:Authenticate.getUser()};req.user=req.auth,prepareRequest(req,next)},post:function(path,id,data,next){angular.isFunction(data)&&(next=data,data=id,id=null);var req={op:"post",path:path,id:id,data:data,auth:Authenticate.getUser()};angular.isObject(req.data)?angular.isObject(req.data.user)||(req.data.user=req.auth):req.data={user:req.auth},prepareRequest(req,next)},put:function(path,data,next){var req={op:"put",path:path,id:null,data:data,auth:Authenticate.getUser()};angular.isObject(req.data)?angular.isObject(req.data.user)||(req.data.user=req.auth):req.data={user:req.auth},prepareRequest(req,next)}}}]),angular.module("hackaFinderApp").factory("Authenticate",["$log","$location","Validate",function($log,$location,Validate){var user,msg=Validate.getErrorMessages(),protectedPaths=[{path:"/",isProtected:!1},{path:"/login",isProtected:!1},{path:"/search",isProtected:!0},{path:"/events",isProtected:!0},{path:"/settings",isProtected:!0}];return{_test:{user:function(newUser){return newUser?void(user=newUser):user}},isProtected:function(path){if(!angular.isString(path))throw new Error(msg.string);for(var i=0,len=protectedPaths.length;len>i;i++)if(protectedPaths[i].path===path)return protectedPaths[i].isProtected;return!1},isAuthenticated:function(){return angular.isObject(user)&&angular.isObject(user.info)},getUser:function(){return user?angular.copy(user):null},setUser:function(newUser){angular.isObject(newUser)&&newUser.hasOwnProperty("info")?user=newUser:$log.debug("This is not a user object.")},deauthenticateUser:function(){user=null,$location.path("/")}}}]),angular.module("hackaFinderApp").controller("FooterCtrl",["$scope","$location",function($scope,$location){$scope.ftr={},$scope.ftr.menuLinks=[{text:"About",link:"http://david.timmons.io/",title:"Noonien Soong would have loved this app."},{text:"Privacy Policy",link:"http://www.freeprivacypolicy.org/generic.php",title:"Even robots hate spam."},{text:"Terms of Use",link:"http://opensource.org/licenses/MIT",title:"Do (pretty much) anything you want, just like Skynet."}],$scope.ftr.isActive=function(route){return route===$location.path()}}]),angular.module("hackaFinderApp").factory("ManageUpdates",["$log","API","Authenticate","DEMO",function($log,API,Authenticate,DEMO){return{updateUserProfile:function(newProfile,oldProfile){if(!(!newProfile||!oldProfile||angular.isUndefined(oldProfile.info)||angular.isUndefined(oldProfile.info.account)||angular.isUndefined(oldProfile.activity)||angular.isUndefined(oldProfile.activity.user_id)||angular.equals(newProfile,Authenticate.getUser()))){var userPost={update:newProfile};API.post("/api/auth/users",userPost,function(err,res){return err?void $log.error(err):res.status>=400?void $log.error("Error: %d - %s",res.status,res.data):void(DEMO?Authenticate.setUser(newProfile):angular.isObject(res.data.info)&&Authenticate.setUser(res.data))})}},updateEventActivity:function(newActivity){newActivity&&!angular.isUndefined(newActivity.event_id)&&API.get("/api/auth/events",newActivity.event_id,function(err,res){err?$log.error(err):res.status>=400&&$log.error("Error: %d - %s",res.status,res.data);var eventNew=res.data;eventNew.activity=newActivity;var eventPost={event:res.data,update:eventNew};API.post("/api/auth/events",eventPost,function(err,res){err?$log.error(err):res.status>=400&&$log.error("Error: %d - %s",res.status,res.data)})})},removeFromRoster:function(userId,roster,shouldClearTeam){if(!angular.isUndefined(userId)&&angular.isObject(roster)){var req={update:roster};req.update.user_id=userId,req.update.shouldClearTeam=shouldClearTeam,API.post("/api/auth/teams/remove",req,function(err,res){err?$log.error(err):res.status>=400&&$log.error("Error: %d - %s",res.status,res.data)})}},updateTeamAsConfirmed:function(userId,roster,next){if(!angular.isUndefined(userId)&&angular.isObject(roster)){var req={update:roster};req.update.user_id=userId,API.post("/api/auth/teams/confirm",req,function(err,res){err?$log.error(err):res.status>=400?$log.error("Error: %d - %s",res.status,res.data):angular.isObject(res.data.info)&&Authenticate.setUser(res.data),(next=angular.isFunction(next)?next:angular.noop)(err,res)})}},addUserToPending:function(userId,roster){if(!angular.isUndefined(userId)&&angular.isObject(roster)){var req={update:roster};req.update.user_id=userId,API.post("/api/auth/teams/pending",req,function(err,res){err?$log.error(err):res.status>=400&&$log.error("Error: %d - %s",res.status,res.data)})}}}}]),angular.module("hackaFinderApp").factory("Modal",["$rootScope","$modal",function($rootScope,$modal){function openModal(scope,modalClass){var modalScope=$rootScope.$new();return scope=scope||{},modalClass=modalClass||"modal-default",angular.extend(modalScope,scope),$modal.open({templateUrl:"components/modal/modal.html",windowClass:modalClass,scope:modalScope})}return{confirm:{"delete":function(del){return del=del||angular.noop,function(){var deleteModal,args=Array.prototype.slice.call(arguments),name=args.shift();deleteModal=openModal({modal:{dismissable:!0,title:"Confirm Delete",html:"<p>Are you sure you want to delete <strong>"+name+"</strong> ?</p>",buttons:[{classes:"btn-danger",text:"Delete",click:function(e){deleteModal.close(e)}},{classes:"btn-default",text:"Cancel",click:function(e){deleteModal.dismiss(e)}}]}},"modal-danger"),deleteModal.result.then(function(event){del.apply(event,args)})}}}}}]),angular.module("hackaFinderApp").controller("NavbarCtrl",["$scope","$location","$modal","$log","API","Authenticate","SetOptions","DEMO",function($scope,$location,$modal,$log,API,Authenticate,SetOptions,DEMO){function refreshMenu(isLoggedIn){API.get("/api/auth/menu",function(err,res){return err?$log.error(err):void(angular.isObject(res.data)&&isLoggedIn?$scope.nav.menuLinks=res.data:$scope.nav.menuLinks=[])})}function reverseLoginState(isLoggedIn){var newStatus={};isLoggedIn?(newStatus.status=!0,newStatus.text="Sign out!"):(newStatus.status=!1,newStatus.text="Log in!"),$scope.nav.isLoggedInStatus=newStatus}$scope.nav={},$scope.$watch(Authenticate.isAuthenticated,function(newVal){refreshMenu(newVal),reverseLoginState(newVal)}),$scope.nav.inDemoMode=DEMO,$scope.nav.closedDemoNotice=SetOptions.isClosed(),$scope.nav.menuLinks=[],$scope.nav.isCollapsed=!0,$scope.nav.isLoggedInStatus={status:!1,text:"Log in!"},$scope.nav.isActive=function(route){return route===$location.path()},$scope.nav.session=function(){var isLoggedIn=$scope.nav.isLoggedInStatus.status;if(isLoggedIn)Authenticate.deauthenticateUser();else{var loginModalConfig={templateUrl:"app/login/login.html",controller:"LoginCtrl",windowClass:"hf-login-modal",
size:"sm"};$modal.open(loginModalConfig)}},$scope.nav.changeLocation=function(newUrl){angular.isString(newUrl)&&$location.url(newUrl)},$scope.nav.setClosed=function(bool){SetOptions.setClosed(bool),$scope.nav.closedDemoNotice=SetOptions.isClosed()}}]),angular.module("hackaFinderApp").filter("sentenceCase",[function(){return function(input){return!angular.isString(input)||input.length<1?input:input[0].toUpperCase()+input.substring(1).toLowerCase()}}]),angular.module("hackaFinderApp").factory("SetOptions",["DEMO",function(DEMO){var closedDemoNotice=DEMO?!1:!0;return{_test:{closedDemoNotice:function(){return closedDemoNotice}},isClosed:function(){return closedDemoNotice},setClosed:function(bool){closedDemoNotice=bool}}}]),angular.module("hackaFinderApp").factory("Validate",[function(){var regex={name:/^([^0-9\W]| )*$/,username:/^[^\W]*$/,state:/^[^0-9\W]{2}$/},msg={callback:"A callback function is required.",op:"The operation must be GET, POST, PUT, or DELETE",path:"The path argument must be a valid string.",restricted:"Please log in and try again.",string:"The argument to this function must be a string."};return{getRegex:function(){return angular.copy(regex)},getErrorMessages:function(){return angular.copy(msg)}}}]),angular.module("hackaFinderApp").run(["$templateCache",function($templateCache){$templateCache.put("app/events/events.html",'<div class=wrapper-sticky><div ng-include="\'components/navbar/navbar.html\'"></div><!-- EVENTS --><form name=eventForm novalidate class="hf-form hf-events panel panel-primary"><!-- Form Heading --><div class=panel-heading><h1 class=panel-title>Events</h1></div><!-- Form Body --><div class=panel-body><p>Do you know of a cool upcoming hackathon? Submit it here!</p><!-- Details --><div class="hf-form-subheader row"><h2>Event Details</h2></div><!-- Event Name --><div class=form-group><label class=sr-only for=eventName>Event Name</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-pencil"></span> <input name=eventName class="form-control input-lg" id=eventName placeholder="Event Name" ng-model=evt.event.info.content.name ng-minlength=1 ng-maxlength=20 ng-pattern=evt.valid.name ng-change=evt.checkEventName(evt.event.info.content.name) ng-model-options="{debounce: {\'default\': 500, \'blur\': 0}}" required></div></div><!-- Event Name Errors --><div class=hf-form-errors ng-hide="eventForm.eventName.$pristine || eventForm.eventName.$valid" ng-messages=eventForm.eventName.$error role=alert><div ng-message="required, pattern">Please enter an event name using only letters and spaces.</div><div ng-message="minlength, maxlength">The event name must be between 1 and 20 characters.</div><div ng-message=eventNameTaken>This event name is already in use.</div></div><!-- Url --><div class=form-group><label class=sr-only for=url>Url</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-link"></span> <input type=url name=url class="form-control input-lg" id=url placeholder="Url (ex. http://dogeapps.xyz)" ng-model=evt.event.info.content.url required></div></div><!-- Url Errors --><div class=hf-form-errors ng-hide="eventForm.url.$pristine || eventForm.url.$valid" ng-messages=eventForm.url.$error role=alert><div ng-message="required, url">Please enter a valid event URL.</div></div><!-- Date --><div class=form-group><label class=sr-only for=date>Date</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-heart"></span> <input type=date name=date class="form-control input-lg" id=date placeholder="Date (ex. 2020-01-23)" ng-model=evt.event.info.content.date required></div></div><!-- Date Errors --><div class=hf-form-errors ng-hide="eventForm.date.$pristine || eventForm.date.$valid" ng-messages=eventForm.date.$error role=alert><div ng-message="required, date">Please enter a valid date (yyyy-MM-dd).</div></div><!-- City/State Group --><div class="hf-inline-form clearfix"><!-- City --><div class="form-group col-sm-6 hf-first"><label class=sr-only for=city>City</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-globe"></span> <input name=city class="form-control input-lg" id=city placeholder=City ng-model=evt.event.info.location.city ng-pattern=evt.valid.name required></div></div><!-- State --><div class="form-group col-sm-6"><div class=hidden-xs><label class=sr-only for=state>State</label><input name=state class="form-control input-lg" id=state placeholder=State ng-model=evt.event.info.location.state ng-pattern=evt.valid.state required></div><div class="visible-xs-block hf-inline-mobile"><label class=sr-only for=stateMobile>State</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-globe"></span> <input name=stateMobile class="form-control input-lg" id=stateMobile placeholder=State ng-model=evt.event.info.location.state ng-pattern=evt.valid.state required></div></div></div><!-- form-group --></div><!-- hf-inline-form --><!-- City/State Group Errors --><div class=hf-form-errors ng-hide="eventForm.city.$pristine || eventForm.city.$valid" ng-messages=eventForm.city.$error role=alert><div ng-message="required, pattern">Please enter a valid city name using only letters and spaces.</div></div><div class=hf-form-errors ng-hide="(eventForm.state.$pristine && eventForm.stateMobile.$pristine) || (eventForm.state.$valid && eventForm.stateMobile.$valid)" ng-messages=eventForm.state.$error role=alert><div ng-message="required, pattern">Please enter a valid two letter state abbreviation.</div></div><!-- Country --><div class=form-group><label class=sr-only for=country>Country</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-flag"></span> <input name=country class="form-control input-lg" id=country placeholder=Country ng-model=evt.event.info.location.country ng-pattern=evt.valid.name required></div></div><!-- Country Errors --><div class=hf-form-errors ng-hide="eventForm.country.$pristine || eventForm.country.$valid" ng-messages=eventForm.country.$error role=alert><div ng-message="required, pattern">Please enter a valid country name using only letters and spaces.</div></div><!-- Form Controls --><button type=submit class="btn hf-btn hf-btn col-sm-4 col-xs-push-4" ng-click="eventForm.$valid && evt.submit()">Submit it!</button></div><!-- panel-body --></form><div class=wrapper-push></div></div><!-- wrapper-sticky --><div ng-include="\'components/footer/footer.html\'"></div>'),$templateCache.put("app/login/login.html",'<!-- LOGIN (MODAL) --><form name=loginForm novalidate><!-- Username --><div class=form-group><label class=sr-only for=username>Username</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-user"></span> <input name=username class="form-control input-lg" id=username placeholder=Username ng-model=login.user.info.account.username required></div></div><!-- Password --><div class=form-group><label class=sr-only for=userPassword>Password</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-lock"></span> <input type=password name=userPassword class="form-control input-lg" id=userPassword placeholder=Password ng-model=login.user.info.account.password required></div></div><!-- Login Status --><div class="alert alert-danger" role=alert ng-show=login.didFail><strong>Bzz! Does not compute!</strong> The username or password was incorrect.</div><!-- Form Controls --><button type=submit class="btn hf-btn col-xs-4 col-xs-push-4" ng-bind=::login.buttonLabel ng-click="loginForm.$valid && login.submitLogin()"></button></form>'),$templateCache.put("app/main/main.html",'<div class=wrapper-sticky><div class=hf-hero><div ng-include="\'components/navbar/navbar.html\'"></div><!-- CALL TO ACTION --><header class="jumbotron hf-max"><div class="container-fluid hf-hero-overlay"><h1 class=row>Hackathons are better with friends!</h1><p class=row><span class=hf-brand>Hacka_finder</span> improves your hackathon experience by connecting you with new friends to form the team <em>you</em> want.</p><p class=row><a href=/signup title="Sign up!" class="btn hf-btn btn-lg">One of us! One of us!</a></p></div></header></div><!-- hf-hero --><!-- CONTENT --><section class="container-fluid hf-max hf-thumbnails"><!-- RoboDoge --><div class="hf-slide-block hf-animation-slide"><img src=assets/images/9d19cda6.robot-dog.png class="img-responsive hf-robot-dog hf-animation-walk" alt="RoboDoge is a robot."></div><!-- Headline --><h2 class="page-header well">"Very app &#8212 much fun &#8212 wow!" <small><span class=hf-block>// RoboDoge</span><div class=hf-block><span class="glyphicon glyphicon-star"></span> <span class="glyphicon glyphicon-star"></span> <span class="glyphicon glyphicon-star"></span> <span class="glyphicon glyphicon-star"></span></div></small></h2><!-- Boxes --><div class=row><div class=col-sm-4><div class=thumbnail><img src=../assets/images/be9ff6c8.robot-criteria.jpg alt="Robots have criteria, too."><div class=caption><h3>You set the criteria.</h3><p>Find a team based on skills and goals that match your own. Did you learn you a Haskell for great good? Do you want a more casual hackathon experience? Find a team that shares your vision.</p></div></div></div><div class=col-sm-4><div class=thumbnail><img ng-src=../assets/images/fd5eff9e.robot-team.jpg alt="I, for one, welcome our new robot overlords."><div class=caption><h3>Meet your cofounders.</h3><p>Hackers create startups. It\'s what we do. Work with new people outside your social circles that could become the Jobs to your Wozniak or the Gates to your Ballmer.</p></div></div></div><div class=col-sm-4><div class=thumbnail><img ng-src=../assets/images/29e0a35b.computers-community.jpg alt="Computers are just baby robots."><div class=caption><h3>Community supported.</h3><p>Submit upcoming hackathons for the community, rate your teammates, and even browse the <span class=hf-brand>Hacka_finder</span> source code on <a href=https://github.com/davidtimmons/hackafinder title="View the Hacka_finder source code on GitHub.">GitHub</a>. Make this the tool <em>you</em> want.</p></div></div></div></div><!-- /row --></section><div class=wrapper-push></div></div><!-- /wrapper-sticky --><div ng-include="\'components/footer/footer.html\'"></div>'),$templateCache.put("app/search/search.html",'<div class=wrapper-sticky><div ng-include="\'components/navbar/navbar.html\'"></div><!-- SEARCH --><!-- <<Add Events (Side)>> --><div class="container-fluid hf-max"><div class="row row-fluid"><div class="col-xs-12 col-sm-4"><section class=hf-sidebar><div class="panel panel-default"><!-- Form Title --><div class=panel-heading><h1 class=panel-title>Event Search</h1></div><!-- Search Description --><div class=panel-body><p>Add an event so others attendees can find you!</p><!-- Event Search --><!-- <button type="button" ng-click="sch._print()">Print</button> --><div class=form-group><label class=sr-only for=eventSearch>Find events!</label><div class=input-group><span class="input-group-addon glyphicon glyphicon-zoom-in"></span> <input class=form-control id=eventSearch placeholder="Find events!" ng-model=sch.eventSearch ng-keyup=sch.displayEventMatch(sch.eventSearch) ng-disabled=sch.eventWasChosen></div></div><!-- Event Result with Confirmation --><div class=clearfix ng-show="!sch.eventWasChosen && sch.event.info.content.name"><span class=pull-left><b>{{::sch.event.info.content.name}}</b></span> <button type=button class="btn btn-xs btn-success pull-right" ng-click=sch.chooseEvent()><span class="glyphicon glyphicon-ok"></span></button></div></div><!-- panel --></div></section><!-- <<Team (Sidebar)>> --><section class=hf-sidebar ng-show=sch.eventWasChosen><div class="panel panel-default hf-panel"><!-- Page Title --><div class="panel-heading clearfix"><h2 class=pull-left>{{::sch.event.info.content.name}} Team</h2><button class="btn btn-xs btn-default pull-right" type=button ng-click=sch.removeEvent()><span class="glyphicon glyphicon-remove"></span></button></div><!-- Event Details --><div class=panel-body><ul class=hf-event-details><li><span class="label label-default">Url</span> <a ng-href={{::sch.event.info.content.url}}>{{::sch.event.info.content.url}}</a></li><li><span class="label label-default">Date</span> {{::sch.event.info.content.date | date: \'longDate\'}}</li><li><span class="label label-default">Location</span> {{::sch.event.info.location.city}}, {{::sch.event.info.location.state}}</li><li><span class="label label-default">Country</span> {{::sch.event.info.location.country}}</li></ul></div><!-- Event Bias Selection --><div class="container-fluid text-center hf-event-bias"><div class="btn-group btn-group-sm" dropdown><button type=button class="btn btn-default">{{sch.labelBias}}</button> <button type=button class="btn btn-primary" dropdown-toggle><span class=caret></span> <span class=sr-only>Toggle Dropdown</span></button><ul role=menu class="dropdown-menu dropdown-menu-right" aria-labelledby=event-bias><li role=header class=dropdown-header>My Event Bias</li><li role=divider class=divider></li><li role=menuitem><a href=# ng-click="sch.getSetBias(\'flexible\')">Flexible</a></li><li role=menuitem><a href=# ng-click="sch.getSetBias(\'competitive\')">Competitive</a></li><li role=menuitem><a href=# ng-click="sch.getSetBias(\'social\')">Social</a></li></ul></div><!-- btn-group --></div><!-- container-fluid --><!-- Hide Me --><button type=button ng-class="[\'btn btn-sm btn-block center-block\', {\'btn-primary\': sch.userIsVisible, \'btn-warning\': !sch.userIsVisible}]" ng-click=sch.getSetMatch(!sch.userIsVisible)>{{sch.labelHide}}</button><!-- Team Members --><ul class=list-group><li class="list-group-item hf-word-break" ng-repeat="user in sch.rosterArray | orderBy: \'info.account.last_name\'" ng-init="map = sch.usersMap[user.info._id]"><span class="label label-default hf-space-right" ng-if=map.pending.exists>Pending</span> <b>{{::user.info.account.first_name}} {{::user.info.account.last_name}}</b> <span class=hf-no-break>//</span> <span ng-if="sch.isDemo || map.team.exists"><a ng-href="mailto:{{::user.info.account.email}}?subject={{::sch.event.info.content.name}}">{{::user.info.account.email}}</a></span> <button class="btn btn-xs btn-danger pull-right" type=button ng-click="sch.removeTeamMember(user, $index)"><span class="glyphicon glyphicon-remove"></span></button> <button type=button class="btn btn-xs btn-success pull-right hf-space-right" ng-click=sch.confirmTeamMember(user) ng-if="map.pending.exists && !map.invited.exists"><span class="glyphicon glyphicon-ok"></span></button></li></ul></div></section></div><!-- col-xs-12 col-sm-4 --><!-- <<Search Box>> --><div class="col-xs-12 col-sm-8"><section><div class="panel panel-primary hf-panel-table"><!-- 3.0: Form Title --><div class=panel-heading><h1 class=panel-title>Team Search</h1></div><div class=panel-body><p>Search for teammates attending the same events as you! Once you choose an event, you can search for people by skills, event bias, and location.</p><!-- 3.1:Teammate Search --><div class=form-group ng-show=sch.eventWasChosen><label class=sr-only for=teamSearch>Find your team!</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-search"></span> <input class="form-control input-lg" id=teamSearch placeholder="Find your team!" ng-model=sch.userSearch ng-keyup=sch.displayUserMatches(sch.userSearch) ng-disabled=!sch.eventWasChosen></div></div></div><!-- panel-body --></div><!-- panel --></section><!-- <<Search Results>> --><section class=hf-search-results ng-show="sch.eventWasChosen && sch.userSearch"><div class="panel panel-default hf-panel-table"><div class=panel-body><h2>Search Results</h2></div><!-- 1.4.0:Results Table --><table class=table><tbody><tr ng-repeat="user in sch.userMatches" ng-init="map = sch.usersMap[user.info._id]"><td class=hf-table-user><ul><li><h3>{{::user.info.account.first_name}} {{::user.info.account.last_name}}</h3></li><li role=separator class=divider></li><li><i>{{::user.info.location.city}}, {{::user.info.location.state}} {{::user.info.location.country}}</i></li></ul></td><td class=hf-table-skills><ul><li><b class=hf-brand>{{::sch.event.info.content.name}}</b><span class="label label-default">{{::map.eUser.bias | sentenceCase}}</span></li><li role=separator class=divider></li><li ng-repeat="s in user.activity.skills">{{::s.skill}} <span class="label label-default hf-label pull-right"><rating ng-model=::s.rating max=3 readonly state-on="\'glyphicon-star\'" state-off="\'glyphicon-star-empty\'"></rating></span></li></ul></td><td class=hf-table-contact><button type=button class="btn btn-default hf-btn btn-sm" ng-click="sch.addUserToPending(user, $index)">Invite!</button></td></tr></tbody></table></div><!-- panel --></section><!-- panel --></div><!-- col-xs-12 col-sm-8 --></div><!-- row --></div><!-- container-fluid --><div class=wrapper-push></div></div><!-- wrapper-sticky --><div ng-include="\'components/footer/footer.html\'"></div>'),$templateCache.put("app/settings/settings.html",'<div class=wrapper-sticky><div ng-include="\'components/navbar/navbar.html\'"></div><!-- SETTINGS --><form name=settingsForm class="hf-form hf-settings panel panel-primary" ng-model-options=stg.modelOptions><!-- <<Form Heading>> --><div class=panel-heading><h1 class=panel-title>Settings</h1></div><div class=panel-body><p>These fields help other people find you (and you them!) when searching for hackathon partners. Fill in the details below to become more visible to your future team!</p><!-- <<My Registration>> --><div class="hf-form-subheader row"><h2>My Registration</h2></div><!-- Name Group --><div class="hf-inline-form clearfix"><!-- First Name --><div class="form-group col-sm-6 hf-first"><label class=sr-only for=firstName>First Name</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-pencil"></span> <input name=firstName class="form-control input-lg" id=firstName placeholder="First Name" ng-model=stg.user.info.account.first_name ng-minlength=1 ng-maxlength=20 ng-pattern=stg.valid.name required></div></div><!-- Last Name --><div class="form-group col-sm-6"><div class=hidden-xs><label class=sr-only for=lastName>Last Name</label><input name=lastName class="form-control input-lg" id=lastName placeholder="Last Name" ng-model=stg.user.info.account.last_name ng-minlength=1 ng-maxlength=20 ng-pattern=stg.valid.name required></div><div class="visible-xs-block hf-inline-mobile"><label class=sr-only for=lastNameMobile>Last Name</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-pencil"></span> <input name=lastNameMobile class="form-control input-lg" id=lastNameMobile placeholder="Last Name" ng-model=stg.user.info.account.last_name ng-minlength=1 ng-maxlength=20 ng-pattern=stg.valid.name required></div></div></div><!-- form-group --></div><!-- hf-inline-form --><!-- Name Group Errors --><div class=hf-form-errors ng-hide="settingsForm.firstName.$pristine || settingsForm.firstName.$valid" ng-messages=settingsForm.firstName.$error role=alert><div ng-message="required, pattern">Please enter your first name using only letters and spaces.</div><div ng-message="minlength, maxlength">Your first name must be between 1 and 20 characters.</div></div><div class=hf-form-errors ng-hide="(settingsForm.lastName.$pristine && settingsForm.lastNameMobile.$pristine) || (settingsForm.lastName.$valid && settingsForm.lastNameMobile.$valid)" ng-messages=settingsForm.lastName.$error role=alert><div ng-message="required, pattern">Please enter your last name using only letters and spaces.</div><div ng-message="minlength, maxlength">Your last name must be between 1 and 20 characters.</div></div><!-- Email --><div class=form-group><label class=sr-only for=userEmail>Email address</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-envelope"></span> <input type=email name=userEmail class="form-control input-lg" id=userEmail placeholder=Email ng-model=stg.user.info.account.email required></div></div><!-- Email Errors --><div class=hf-form-errors ng-hide="settingsForm.userEmail.$pristine || settingsForm.userEmail.$valid" ng-messages=settingsForm.userEmail.$error role=alert><div ng-message="required, email">Please enter a valid email address.</div></div><!-- Password --><div class=form-group><label class=sr-only for=userPassword>Password</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-lock"></span> <input type=password name=userPassword class="form-control input-lg" id=userPassword placeholder=Password ng-model=stg.user.info.account.password ng-minlength=5 ng-maxlength=20 required></div></div><!-- Password Errors --><div class=hf-form-errors ng-hide="settingsForm.userPassword.$pristine || settingsForm.userPassword.$valid" ng-messages=settingsForm.userPassword.$error role=alert><div ng-message=required>Please enter a password.</div><div ng-message="minlength, maxlength">Your password must be between 5 and 20 characters.</div></div><!-- <<My Profile>> --><div class="hf-form-subheader row"><h2>My Profile</h2></div><!-- City/State Group --><div class="hf-inline-form clearfix"><!-- City --><div class="form-group col-sm-6 hf-first"><label class=sr-only for=city>City</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-globe"></span> <input name=city class="form-control input-lg" id=city placeholder=City ng-model=stg.user.info.location.city ng-pattern=stg.valid.name></div></div><!-- State --><div class="form-group col-sm-6"><div class=hidden-xs><label class=sr-only for=state>State</label><input name=state class="form-control input-lg" id=state placeholder=State ng-model=stg.user.info.location.state ng-pattern=stg.valid.state></div><div class="visible-xs-block hf-inline-mobile"><label class=sr-only for=stateMobile>State</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-globe"></span> <input name=stateMobile class="form-control input-lg" id=stateMobile placeholder=State ng-model=stg.user.info.location.state ng-pattern=stg.valid.state></div></div></div><!-- form-group --></div><!-- hf-inline-form --><!-- City/State Group Errors --><div class=hf-form-errors ng-hide="settingsForm.city.$pristine || settingsForm.city.$valid" ng-messages=settingsForm.city.$error role=alert><div ng-message=pattern>Please enter a valid city name using only letters and spaces.</div></div><div class=hf-form-errors ng-hide="(settingsForm.state.$pristine && settingsForm.stateMobile.$pristine) || (settingsForm.state.$valid && settingsForm.stateMobile.$valid)" ng-messages=settingsForm.state.$error role=alert><div ng-message=pattern>Please enter a valid two letter state abbreviation.</div></div><!-- Country --><div class=form-group><label class=sr-only for=country>Country</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-flag"></span> <input name=country class="form-control input-lg" id=country placeholder=Country ng-model=stg.user.info.location.country ng-pattern=stg.valid.name></div></div><!-- Country Errors --><div class=hf-form-errors ng-hide="settingsForm.country.$pristine || settingsForm.country.$valid" ng-messages=settingsForm.country.$error role=alert><div ng-message=pattern>Please enter a valid country name using only letters and spaces.</div></div><!-- <<My Skills>> --><div class="hf-form-subheader row"><h2>My Skills</h2></div><!-- Skill Group --><div class=form-group><label class=sr-only for=skills>Skills</label><!-- Input --><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-star"></span> <input class="form-control input-lg" id=skills placeholder="Skills (Max: {{stg.getMax()}})" ng-model=stg.newSkill.skill ng-model-options="{debounce: 250}" ng-minlength=1 ng-maxlength=20 ng-keyup=stg.addSkill($event)></div></div><!-- Entries --><div class="row hf-skills-row" ng-repeat="s in stg.user.activity.skills"><span class="col-xs-6 col-sm-8 col-xs-offset-1"><button type=button class="btn btn-danger btn-xs" ng-click=stg.removeSkill(s)><span class="glyphicon glyphicon-remove"></span></button> {{::s.skill}}</span><!-- Star Ratings --><div class="col-xs-5 col-sm-3"><rating ng-model=s.rating max=stg.r.max rating-states=stg.r.ratingStates></rating></div><!-- btn-group --></div><!-- row --></div></form><div class=wrapper-push></div></div><!-- /wrapper-sticky --><div ng-include="\'components/footer/footer.html\'"></div>'),$templateCache.put("app/signup/signup.html",'<div class=wrapper-sticky><div ng-include="\'components/navbar/navbar.html\'"></div><!-- SIGNUP --><form name=signupForm novalidate class="hf-form hf-form-default panel panel-primary"><!-- Form Heading --><div class=panel-heading><h1 class=panel-title>Sign up!</h1></div><!-- Form Body --><div class=panel-body><!-- Name Group --><div class="hf-inline-form clearfix"><!-- First Name --><div class="form-group col-sm-6 hf-first"><label class=sr-only for=firstName>First Name</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-pencil"></span> <input name=firstName class="form-control input-lg" id=firstName placeholder="First Name" ng-model=signup.user.info.account.first_name ng-minlength=1 ng-maxlength=20 ng-pattern=signup.valid.name required></div></div><!-- Last Name --><div class="form-group col-sm-6"><div class=hidden-xs><label class=sr-only for=lastName>Last Name</label><input name=lastName class="form-control input-lg" id=lastName placeholder="Last Name" ng-model=signup.user.info.account.last_name ng-minlength=1 ng-maxlength=20 ng-pattern=signup.valid.name required></div><div class="visible-xs-block hf-inline-mobile"><label class=sr-only for=lastNameMobile>Last Name</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-pencil"></span> <input name=lastNameMobile class="form-control input-lg" id=lastNameMobile placeholder="Last Name" ng-model=signup.user.info.account.last_name ng-minlength=1 ng-maxlength=20 ng-pattern=signup.valid.name required></div></div></div><!-- form-group --></div><!-- hf-inline-form --><!-- Name Group Errors --><div class=hf-form-errors ng-hide="signupForm.firstName.$pristine || signupForm.firstName.$valid" ng-messages=signupForm.firstName.$error role=alert><div ng-message="required, pattern">Please enter your first name using only letters and spaces.</div><div ng-message="minlength, maxlength">Your first name must be between 1 and 20 characters.</div></div><div class=hf-form-errors ng-hide="(signupForm.lastName.$pristine && signupForm.lastNameMobile.$pristine) || (signupForm.lastName.$valid && signupForm.lastNameMobile.$valid)" ng-messages=signupForm.lastName.$error role=alert><div ng-message="required, pattern">Please enter your last name using only letters and spaces.</div><div ng-message="minlength, maxlength">Your last name must be between 1 and 20 characters.</div></div><!-- Username --><div class=form-group><label class=sr-only for=username>Username</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-user"></span> <input name=username class="form-control input-lg" id=username placeholder=Username ng-model=signup.user.info.account.username ng-minlength=5 ng-maxlength=20 ng-pattern=signup.valid.username ng-change=signup.checkUsername(signup.user.info.account.username) ng-model-options="{debounce: {\'default\': 500, \'blur\': 0}}" required></div></div><!-- Username Errors --><div class=hf-form-errors ng-hide="signupForm.username.$pristine || signupForm.username.$valid" ng-messages=signupForm.username.$error role=alert><div ng-message="required, pattern">Please enter your username using only letters and numbers.</div><div ng-message="minlength, maxlength">Your username must be between 5 and 20 characters.</div><div ng-message=usernameTaken>This username is taken.</div></div><!-- Email --><div class=form-group><label class=sr-only for=userEmail>Email address</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-envelope"></span> <input type=email name=userEmail class="form-control input-lg" id=userEmail placeholder=Email ng-model=signup.user.info.account.email required></div></div><!-- Email Errors --><div class=hf-form-errors ng-hide="signupForm.userEmail.$pristine || signupForm.userEmail.$valid" ng-messages=signupForm.userEmail.$error role=alert><div ng-message="required, email">Please enter a valid email address.</div></div><!-- Password --><div class=form-group><label class=sr-only for=userPassword>Password</label><div class="input-group input-group-lg"><span class="input-group-addon glyphicon glyphicon-lock"></span> <input type=password name=userPassword class="form-control input-lg" id=userPassword placeholder=Password ng-model=signup.user.info.account.password ng-minlength=5 ng-maxlength=20 required></div></div><!-- Password Errors --><div class=hf-form-errors ng-hide="signupForm.userPassword.$pristine || signupForm.userPassword.$valid" ng-messages=signupForm.userPassword.$error role=alert><div ng-message=required>Please enter a password.</div><div ng-message="minlength, maxlength">Your password must be between 5 and 20 characters.</div></div><!-- Form Controls --><button type=submit class="btn hf-btn center-block" ng-click="signupForm.$valid && signup.submit()">Create your account!</button></div><!-- panel-body --></form><div class=wrapper-push></div></div><!-- wrapper-sticky --><div ng-include="\'components/footer/footer.html\'"></div>'),$templateCache.put("components/footer/footer.html",'<!-- FOOTER --><footer class=wrapper-footer ng-controller=FooterCtrl><nav class="hf-max container-fluid"><ul class="nav nav-pills hf-nav-stacked"><!-- Logo --><li class=hf-nav-brand><a href="/" rel=index title="Go home!" ng-class="[\'text-hide\', {active: ftr.isActive(\'/\')}]">Hacka_finder <img src=assets/images/047b408d.hackafinder.svg class=img-responsive alt=Hacka_finder></a></li><!-- Links --><li class=hf-nav-links ng-repeat="item in ftr.menuLinks"><a ng-href={{::item.link}} title={{::item.title}} ng-bind=::item.text></a></li></ul></nav></footer>'),$templateCache.put("components/modal/modal.html",'<div class=modal-header><button ng-if=modal.dismissable type=button ng-click=$dismiss() class=close>&times;</button><h4 ng-if=modal.title ng-bind=modal.title class=modal-title></h4></div><div class=modal-body><p ng-if=modal.text ng-bind=modal.text></p><div ng-if=modal.html ng-bind-html=modal.html></div></div><div class=modal-footer><button ng-repeat="button in modal.buttons" ng-class=button.classes ng-click=button.click($event) ng-bind=button.text class=btn></button></div>'),$templateCache.put("components/navbar/navbar.html",'<!-- NAVIGATION BAR --><nav class="header navbar navbar-static-top" ng-controller=NavbarCtrl><!-- Demo Mode Alert --><div class="alert alert-info alert-dismissible" role=alert ng-if=!nav.closedDemoNotice><button type=button class=close ng-click=nav.setClosed(true)>&times;</button> You are in demo mode. Download the code at <a href=https://github.com/davidtimmons/hackafinder class=alert-link title="Get the full version on GitHub!">GitHub</a>!</div><div class="container hf-max"><!-- Menu Toggle --><div class=navbar-header><button class=navbar-toggle type=button ng-click="nav.isCollapsed = !nav.isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button><!-- Logo --> <a href="/" rel=index title="Go home!" ng-class="[\'navbar-brand text-hide\', {active: nav.isActive(\'/\')}]">Hacka_finder <img src=assets/images/047b408d.hackafinder.svg class=img-responsive alt=Hacka_finder></a></div><!-- Menu Links --><div collapse=nav.isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav navbar-right nav-pills hf-nav-stacked"><li ng-repeat="item in nav.menuLinks" ng-class="{active: nav.isActive(item.link)}"><a ng-href={{::item.link}} title={{::item.title}}><span class="glyphicon glyphicon-{{::item.glyph}}"></span> {{::item.text}}</a></li><!-- Menu Buttons --><li ng-class="{active: nav.isActive(\'/signup\')}" ng-hide=nav.isLoggedInStatus.status><button type=button ng-click="nav.changeLocation(\'/signup\')" class="btn hf-btn hf-btn-navbar hf-btn-signup">Sign up!</button></li><li><button type=button ng-class="[\'btn hf-btn hf-btn-navbar\', {\'hf-btn-login\': nav.isLoggedInStatus.status}]" ng-click=nav.session() ng-bind=nav.isLoggedInStatus.text></button></li></ul></div></div></nav>');
}]);